# === STAGE 1: Build ===
# Usa l'immagine SDK per compilare l'applicazione
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# Copia solo i file di progetto per ottimizzare la cache Docker
COPY ["*.csproj", "./"]
RUN dotnet restore

# Copia tutto il codice sorgente
COPY . .

# Compila l'applicazione in modalità Release
RUN dotnet build -c Release -o /app/build

# === STAGE 2: Publish ===
# Pubblica l'applicazione per il deployment
FROM build AS publish
RUN dotnet publish -c Release -o /app/publish /p:UseAppHost=false

# === STAGE 3: Runtime ===
# Usa l'immagine runtime più leggera per l'esecuzione
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS final
WORKDIR /app

# Crea utente non-root per sicurezza
RUN adduser --disabled-password --gecos '' appuser && chown -R appuser /app
USER appuser

# Copia i file pubblicati dal stage precedente
COPY --from=publish /app/publish .

# Espone la porta 8080 (standard per container)
EXPOSE 8080

# Configura l'applicazione per ascoltare su tutte le interfacce
ENV ASPNETCORE_URLS=http://+:8080

# Comando di avvio dell'applicazione
ENTRYPOINT ["dotnet", "PrestitiBiblioteca.dll"]